class Node:
    def __init__(self, value):
        self.value = value
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def append(self, value):
        new_node = Node(value)
        if not self.head:
            self.head = new_node
            return
        tail_node = self.head
        while tail_node.next:
            tail_node = tail_node.next
        tail_node.next = new_node

    def delete_node(self, elem):
        temp = self.head

        if temp and temp.value == elem:
            self.head = temp.next
            temp = None
            return

    
        prev = None
        while temp and temp.value != elem:
            prev = temp
            temp = temp.next

        # If elem was not present in the linked list
        if not temp:
            return

        # Unlink the node from the linked list
        prev.next = temp.next
        temp = None

    def print_list(self):
        current = self.head
        while current:
            print(current.value, end=' ')
            current = current.next
        print()


mylist = LinkedList()
mylist.append(1)
mylist.append(2)
mylist.append(3)
mylist.append(4)

print("Original Linked List:")
mylist.print_list()

mylist.delete_node(3)

print("Linked List after deleting 3:")
mylist.print_list()